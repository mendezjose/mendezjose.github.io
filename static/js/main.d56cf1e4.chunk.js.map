{"version":3,"sources":["components/header.jsx","components/footer.jsx","components/Blog.jsx","components/Musica.jsx","components/Index.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","props","class","href","className","icon","codeEditor","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","tabindex","aria-disabled","Footer","Blog","Musica","Index","role","App","Fragment","path","component","to","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iSA2DeA,EAnDA,SAACC,GACd,OACE,gCACE,yBAAKC,MAAM,sDACT,uBAAGC,KAAK,IAAID,MAAM,0CAChB,kBAAC,OAAD,CAAME,UAAU,YAAYC,KAAMC,MAClC,sDAEF,4BACEJ,MAAM,2BACNK,KAAK,SACLC,cAAY,WACZC,cAAY,oBACZC,gBAAc,mBACdC,gBAAc,QACdC,aAAW,qBAEX,0BAAMV,MAAM,yBAGd,yBAAKA,MAAM,2BAA2BW,GAAG,oBACvC,wBAAIX,MAAM,sBACR,wBAAIA,MAAM,mBACR,uBAAGA,MAAM,WAAWC,KAAK,SAAzB,QACO,0BAAMD,MAAM,WAAZ,eAGT,wBAAIA,MAAM,YACR,uBACEA,MAAM,WACNC,KAAK,UACLW,SAAS,KACTC,gBAAc,QAJhB,mBCVCC,EAxBA,WACb,OACE,4BAAQd,MAAM,cACZ,yBAAKA,MAAM,aACT,uBAAGA,MAAM,eACP,uBAAGC,KAAK,KAAR,cAEF,kHAIA,+CACoB,IAClB,uBAAGA,KAAK,6BAAR,sBAFF,eAEyE,IACvE,uBAAGA,KAAK,2CAAR,yBAHF,QCCOc,EAVF,WACX,OACE,oCACE,kBAAC,EAAD,MACA,qCACA,kBAAC,EAAD,QCKSC,EAVA,WACb,OACE,6BACE,kBAAC,EAAD,MACA,0CACA,kBAAC,EAAD,QC8BSC,EAlCD,WACZ,OACE,oCACE,kBAAC,EAAD,MACA,0BAAMC,KAAK,OAAOlB,MAAM,oBACtB,yBAAKA,MAAM,yFACT,yBAAKA,MAAM,+CACT,4BAAQA,MAAM,iCAAd,SACA,wBAAIA,MAAM,QAAV,iBACA,yBAAKA,MAAM,mBAAX,UACA,uBAAGA,MAAM,qBAAT,+FAIA,uBAAGC,KAAK,IAAID,MAAM,kBAAlB,uBAMN,4BAAQA,MAAM,oBACZ,yBAAKA,MAAM,SACT,2BACE,uBAAGC,KAAK,oDAAR,iBAEK,IAHP,KAII,uBAAGA,KAAK,iCAAR,eCVCkB,MAff,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWP,IAC/B,kBAAC,IAAD,CAAOM,KAAK,UAAUC,UAAWN,IACjC,kBAAC,IAAD,CAAOK,KAAK,IAAIC,UAAWL,IAC3B,kBAAC,IAAD,CAAUM,GAAG,mBCFHC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,wBCRNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d56cf1e4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Icon, InlineIcon } from \"@iconify/react\";\r\nimport javascriptIcon from \"@iconify/icons-logos/javascript\";\r\nimport codeFile from \"@iconify/icons-icons8/code-file\";\r\nimport fileCodeO from \"@iconify/icons-fa/file-code-o\";\r\nimport codeIcon from \"@iconify/icons-oi/code\";\r\nimport codeEditor from \"@iconify/icons-openmoji/code-editor\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <header>\r\n      <nav class=\"navbar navbar-expand-sm navbar-dark bg-transparent\">\r\n        <a href=\"/\" class=\"navbar-brand d-flex align-items-center\">\r\n          <Icon className=\"mr-2 logo\" icon={codeEditor} />\r\n          <strong>José Méndez</strong>\r\n        </a>\r\n        <button\r\n          class=\"navbar-toggler collapsed\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarsExample04\"\r\n          aria-controls=\"navbarsExample04\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div class=\"navbar-collapse collapse\" id=\"navbarsExample04\">\r\n          <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item active\">\r\n              <a class=\"nav-link\" href=\"/blog\">\r\n                Blog <span class=\"sr-only\">(current)</span>\r\n              </a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a\r\n                class=\"nav-link\"\r\n                href=\"/musica\"\r\n                tabindex=\"-1\"\r\n                aria-disabled=\"true\"\r\n              >\r\n                Música\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          {/* <form class=\"form-inline my-2 my-md-0\">\r\n            <input\r\n              class=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Buscar\"\r\n            ></input>\r\n          </form> */}\r\n        </div>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer class=\"text-muted\">\r\n      <div class=\"container\">\r\n        <p class=\"float-right\">\r\n          <a href=\"#\">Ir arriba</a>\r\n        </p>\r\n        <p>\r\n          Album example is © Bootstrap, but please download and customize it for\r\n          yourself!\r\n        </p>\r\n        <p>\r\n          New to Bootstrap?{\" \"}\r\n          <a href=\"https://getbootstrap.com/\">Visit the homepage</a> or read our{\" \"}\r\n          <a href=\"/docs/4.5/getting-started/introduction/\">\r\n            getting started guide\r\n          </a>\r\n          .\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport Header from \"./header\";\r\nimport Footer from \"./footer\";\r\n\r\nconst Blog = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div>Blog</div>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Blog;\r\n","import React from \"react\";\r\nimport Header from \"./header\";\r\nimport Footer from \"./footer\";\r\n\r\nconst Musica = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div>Música</div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Musica;\r\n","import React from \"react\";\r\nimport Header from \"./header\";\r\nimport Main from \"./main\";\r\nimport Footer from \"./footer\";\r\n\r\nconst Index = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main role=\"main\" class=\"inner cover mt-3\">\r\n        <div class=\"row no-gutters overflow-hidden flex-md-row mb-4  h-md-250 position-relative text-left\">\r\n          <div class=\"col py-2 d-flex flex-column position-static\">\r\n            <strong class=\"d-inline-block mb-2 text-lime\">World</strong>\r\n            <h3 class=\"mb-0\">Featured post</h3>\r\n            <div class=\"mb-1 text-muted\">Nov 12</div>\r\n            <p class=\"card-text mb-auto\">\r\n              This is a wider card with supporting text below as a natural\r\n              lead-in to additional content.\r\n            </p>\r\n            <a href=\"#\" class=\"stretched-link\">\r\n              Continue reading\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </main>\r\n      <footer class=\"mastfoot mt-auto\">\r\n        <div class=\"inner\">\r\n          <p>\r\n            <a href=\"https://es.stackoverflow.com/users/42237/dubjamh\">\r\n              stackoverflow\r\n            </a>{\" \"}\r\n            - <a href=\"https://github.com/mendezjose\">github</a>\r\n          </p>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React, { useState } from \"react\";\nimport { Route, Redirect, Switch, BrowserRouter } from \"react-router-dom\";\nimport Blog from \"./components/Blog\";\nimport Musica from \"./components/Musica\";\nimport Index from \"./components/Index\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/blog\" component={Blog} />\n          <Route path=\"/musica\" component={Musica} />\n          <Route path=\"/\" component={Index} />\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </BrowserRouter>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport $ from \"jquery\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./cover.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}